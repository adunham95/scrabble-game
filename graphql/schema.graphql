type Student {
    id: ID!
    color: String!
    icon: String!
    points: Int!
    tiles: [Tile]
}

input StudentInput{
    color: String!
    icon: String!
}

type Host {
    id: ID!
    username: String!
    password: String!
}

input HostInput {
    username: String!
    password: String!
}

type Tile {
    id: ID!
    point: Int
    letter: String!
}

input TileInput {
    point: Int
    letter: String!
}

type Game {
    id: ID!
    password: String
    tiles: [Tile]
    users: [Student]
    host: Host!
}

input GameInput {
    password: String!
    users: [Student]
    host: Host!
}

type Query{
    #Games
    game(id: ID!): Game
}

type Mutation{
    # 
    createGame(input: GameInput): Game
    updateGame(id: ID, input: GameInput): Game

    createStudent(input: StudentInput): Student
    updateStudent(id: ID!, input: StudentInput): Student
}